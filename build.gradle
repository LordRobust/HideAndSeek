plugins {
    id 'java'
    id 'maven'
    id 'signing'
}

import org.apache.tools.ant.filters.ReplaceTokens

group 'io.indices'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    dev = true
}

defaultTasks 'clean', 'build'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://hub.spigotmc.org/nexus/content/groups/public/' }
    maven { url 'https://oss.sonatype.org/content/groups/public/' }
    maven { url 'https://nexus.indices.io/content/groups/public/' }
    maven { url "http://repo.onarandombox.com/content/groups/public/" }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    compileOnly group: 'org.spigotmc', name: 'spigot-api', version: '1.12-R0.1-SNAPSHOT'
    compileOnly group: 'org.spigotmc', name: 'spigot', version: '1.12-R0.1-SNAPSHOT'
    compileOnly group: 'com.voxelgameslib', name: 'voxelgameslib', version: '2.0-SNAPSHOT', changing: true
    compileOnly group: 'org.projectlombok', name: 'lombok', 'version': '1.16.0'
    compileOnly group: 'com.comphenix.protocol', name: 'ProtocolLib', version: '4.2.1'
}

processResources {
    filter ReplaceTokens, tokens: [
            'version': project.version
    ]
}

compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}


if (dev) {
    task copyToServer(dependsOn: 'jar', type: Copy) {
        from 'build/libs/hideandseek-1.0-SNAPSHOT.jar'
        into '../testserver/plugins/'
    }
} else {
    task javadocJar(type: Jar) {
        classifier 'javadoc'
        javadoc.failOnError = false
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }

    signing {
        required {
            !project.version.endsWith('-SNAPSHOT') && gradle.taskGraph.hasTask('uploadArchives')
        }
        sign configurations.archives
    }

    if (project.hasProperty('indicesUsername') && project.hasProperty('indicesPassword')) {
        uploadArchives {
            repositories {
                mavenDeployer {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                    repository(url: 'https://nexus.indices.io/content/repositories/releases/') {
                        authentication(userName: indicesUsername, password: indicesPassword)
                    }

                    snapshotRepository(url: 'https://nexus.indices.io/content/repositories/snapshots/') {
                        authentication(userName: indicesUsername, password: indicesPassword)
                    }

                    pom.project {
                        name project.name

                        issueManagement {
                            system 'GitHub Issues'
                            url 'https://github.com/LordRobust/hideandseek/issues'
                        }

                        scm {
                            connection 'scm:git@github.com:LordRobust/hideandseek.git'
                            developerConnection 'scm:git@github.com:LordRobust/hideandseek.git'
                            url 'https://github.com/LordRobust/hideandseek/'
                        }
                    }
                }
            }
        }
    }
}

configurations.all {
    // Check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}